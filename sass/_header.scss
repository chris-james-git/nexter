.header {
  background-color: $color-grey-dark-1;
  grid-column: full-start / col-end 6;
  background-image: linear-gradient(
      rgba($color-secondary, 0.93),
      rgba($color-secondary, 0.93)
    ),
    url(../img/hero.jpeg);
  background-size: cover;
  background-position: center;
  padding: 8rem;
  padding-top: 4rem;

  display: grid;
  // The 1fr for the first row will cause the following rows to be pushed down.
  // The stretch that occurs on the final row 1fr is dealt with by using align-self / justify-self.
  // We use the minmax(6rem, min-content) to ensure the heading renders properly.
  grid-template-rows: 1fr min-content minmax(6rem, min-content) 1fr;
  // use minmax(min-content, max-content) to get the image
  // to scale responsively.
  grid-template-columns: minmax(min-content, max-content);
  grid-row-gap: 1.5rem;
  justify-content: center;

  &__logo {
    height: 3rem;
    justify-self: center;
  }

  &__btn {
    align-self: start;
    justify-self: start;
  }

  &__seenon-text {
    // Demo of using ::before and ::after as grid items.
    // Text itelf can be a grid item, as can pseudo-elements.
    display: grid;
    grid-template-columns: 1fr max-content 1fr;
    grid-column-gap: 1.5rem;
    align-items: center;

    font-size: 1.6rem;
    color: $color-grey-light-2;

    &::before,
    &::after {
      content: "";
      height: 1px;
      display: block;
      background-color: currentColor;
    }
  }

  &__seenon-logos {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-column-gap: 3rem;
    justify-items: center;
    align-items: center;

    img {
      // Use max-height and max-width here to improve responsiveness
      max-height: 2.5rem;
      max-width: 100%;
      filter: brightness(70%);
    }
  }
}
